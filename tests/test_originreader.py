"""Unit tests for originreader.py generated by Assistant."""

import pytest
import os
import pandas as pd

from sastools.readers import OriginReader

# Create a test file with Lorentzian data to use in the tests
TEST_FILE = """
		Wert	Standardfehler	t-Wert	Wahrsch.>|t|	Abh√§ngigkeit
B	y0	0.41065	0.06428	6.38894	3.08504E-7	0.46902
B	xc	1.16692	6.4272E-4	1815.59649	3.81046E-84	1.56217E-5
B	w	0.0239	0.00217	11.00728	1.38777E-12	0.64104
B	A	0.16627	0.01239	13.42298	6.38196E-15	0.73627
B	H	4.42905	0.24153			
B	y0	0.33026	0.09346	3.53352	7.4234E-4	0.26333
B	xc	2.34351	3.65909E-4	6404.64299	2.1231E-198	1.54328E-4
B	w	0.02298	0.0011	20.88109	2.7332E-31	0.56874
B	A	0.66466	0.02444	27.19433	2.914E-38	0.62968
B	H	18.4153	0.57941			
B	y0	-0.02963	0.0465	-0.63722	0.52882	0.5298
B	xc	3.5183	4.24642E-4	8285.31593	3.91661E-97	9.32153E-6
B	w	0.02554	0.00145	17.61349	2.28366E-17	0.66046
B	A	0.18226	0.00881	20.69768	2.58067E-19	0.76435
B	H	4.54345	0.15092			
"""


@pytest.fixture
def origin_reader():
    # Create a test file with Lorentzian data
    with open("test.txt", "w") as f:
        f.write(TEST_FILE)
    yield OriginReader("test.txt")
    # Clean up the test file
    os.remove("test.txt")


def test_origin_reader_repr(origin_reader):
    assert origin_reader.__repr__() == "Origin Reader"


def test_origin_reader_full_dataframe(origin_reader):
    full_df = origin_reader.full_dataframe
    assert isinstance(full_df, pd.DataFrame)
    assert full_df.shape == (15, 7)


def test_origin_reader_xc_dataframe(origin_reader):
    xc_df = origin_reader.xc_dataframe
    assert isinstance(xc_df, pd.DataFrame)
    assert xc_df.shape == (3, 7)
    assert (xc_df["symbol"] == "xc").all()
